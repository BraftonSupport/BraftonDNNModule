#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brafton.Modules.BraftonImporter7_02_02.dbDataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DNN_DB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlog_Post(Blog_Post instance);
    partial void UpdateBlog_Post(Blog_Post instance);
    partial void DeleteBlog_Post(Blog_Post instance);
    partial void InsertBlog_Blog(Blog_Blog instance);
    partial void UpdateBlog_Blog(Blog_Blog instance);
    partial void DeleteBlog_Blog(Blog_Blog instance);
    partial void InsertContentItem(ContentItem instance);
    partial void UpdateContentItem(ContentItem instance);
    partial void DeleteContentItem(ContentItem instance);
    partial void InsertTaxonomy_Term(Taxonomy_Term instance);
    partial void UpdateTaxonomy_Term(Taxonomy_Term instance);
    partial void DeleteTaxonomy_Term(Taxonomy_Term instance);
    partial void InsertBlog_Term(Blog_Term instance);
    partial void UpdateBlog_Term(Blog_Term instance);
    partial void DeleteBlog_Term(Blog_Term instance);
    partial void InsertContentItems_Tag(ContentItems_Tag instance);
    partial void UpdateContentItems_Tag(ContentItems_Tag instance);
    partial void DeleteContentItems_Tag(ContentItems_Tag instance);
    partial void InsertTaxonomy_Vocabulary(Taxonomy_Vocabulary instance);
    partial void UpdateTaxonomy_Vocabulary(Taxonomy_Vocabulary instance);
    partial void DeleteTaxonomy_Vocabulary(Taxonomy_Vocabulary instance);
    partial void InsertTaxonomy_VocabularyType(Taxonomy_VocabularyType instance);
    partial void UpdateTaxonomy_VocabularyType(Taxonomy_VocabularyType instance);
    partial void DeleteTaxonomy_VocabularyType(Taxonomy_VocabularyType instance);
    partial void InsertContentType(ContentType instance);
    partial void UpdateContentType(ContentType instance);
    partial void DeleteContentType(ContentType instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBrafton_table(Brafton_table instance);
    partial void UpdateBrafton_table(Brafton_table instance);
    partial void DeleteBrafton_table(Brafton_table instance);
    #endregion
		
		public DataClasses1DataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Blog_Post> Blog_Posts
		{
			get
			{
				return this.GetTable<Blog_Post>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Blog> Blog_Blogs
		{
			get
			{
				return this.GetTable<Blog_Blog>();
			}
		}
		
		public System.Data.Linq.Table<ContentItem> ContentItems
		{
			get
			{
				return this.GetTable<ContentItem>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_Term> Taxonomy_Terms
		{
			get
			{
				return this.GetTable<Taxonomy_Term>();
			}
		}
		
		public System.Data.Linq.Table<Blog_Term> Blog_Terms
		{
			get
			{
				return this.GetTable<Blog_Term>();
			}
		}
		
		public System.Data.Linq.Table<ContentItems_Tag> ContentItems_Tags
		{
			get
			{
				return this.GetTable<ContentItems_Tag>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_Vocabulary> Taxonomy_Vocabularies
		{
			get
			{
				return this.GetTable<Taxonomy_Vocabulary>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy_VocabularyType> Taxonomy_VocabularyTypes
		{
			get
			{
				return this.GetTable<Taxonomy_VocabularyType>();
			}
		}
		
		public System.Data.Linq.Table<ContentType> ContentTypes
		{
			get
			{
				return this.GetTable<ContentType>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Brafton_table> Brafton_tables
		{
			get
			{
				return this.GetTable<Brafton_table>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Posts")]
	public partial class Blog_Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemId;
		
		private int _BlogID;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Image;
		
		private bool _Published;
		
		private System.DateTime _PublishedOnDate;
		
		private System.Nullable<bool> _AllowComments;
		
		private bool _DisplayCopyright;
		
		private string _Copyright;
		
		private string _Locale;
		
		private System.Nullable<int> _ViewCount;
		
		private System.Nullable<System.DateTime> _LastUpdatedOn;
		
		private string _BraftonID;
		
		private EntityRef<Blog_Blog> _Blog_Blog;
		
		private EntityRef<ContentItem> _ContentItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemIdChanging(int value);
    partial void OnContentItemIdChanged();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnPublishedOnDateChanging(System.DateTime value);
    partial void OnPublishedOnDateChanged();
    partial void OnAllowCommentsChanging(System.Nullable<bool> value);
    partial void OnAllowCommentsChanged();
    partial void OnDisplayCopyrightChanging(bool value);
    partial void OnDisplayCopyrightChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnLocaleChanging(string value);
    partial void OnLocaleChanged();
    partial void OnViewCountChanging(System.Nullable<int> value);
    partial void OnViewCountChanged();
    partial void OnLastUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedOnChanged();
    partial void OnBraftonIDChanging(string value);
    partial void OnBraftonIDChanged();
    #endregion
		
		public Blog_Post()
		{
			this._Blog_Blog = default(EntityRef<Blog_Blog>);
			this._ContentItem = default(EntityRef<ContentItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ContentItemId
		{
			get
			{
				return this._ContentItemId;
			}
			set
			{
				if ((this._ContentItemId != value))
				{
					if (this._ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIdChanging(value);
					this.SendPropertyChanging();
					this._ContentItemId = value;
					this.SendPropertyChanged("ContentItemId");
					this.OnContentItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", DbType="Int NOT NULL")]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					if (this._Blog_Blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishedOnDate
		{
			get
			{
				return this._PublishedOnDate;
			}
			set
			{
				if ((this._PublishedOnDate != value))
				{
					this.OnPublishedOnDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedOnDate = value;
					this.SendPropertyChanged("PublishedOnDate");
					this.OnPublishedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowComments", DbType="Bit")]
		public System.Nullable<bool> AllowComments
		{
			get
			{
				return this._AllowComments;
			}
			set
			{
				if ((this._AllowComments != value))
				{
					this.OnAllowCommentsChanging(value);
					this.SendPropertyChanging();
					this._AllowComments = value;
					this.SendPropertyChanged("AllowComments");
					this.OnAllowCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCopyright", DbType="Bit NOT NULL")]
		public bool DisplayCopyright
		{
			get
			{
				return this._DisplayCopyright;
			}
			set
			{
				if ((this._DisplayCopyright != value))
				{
					this.OnDisplayCopyrightChanging(value);
					this.SendPropertyChanging();
					this._DisplayCopyright = value;
					this.SendPropertyChanged("DisplayCopyright");
					this.OnDisplayCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(255)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locale", DbType="NVarChar(50)")]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this.OnLocaleChanging(value);
					this.SendPropertyChanging();
					this._Locale = value;
					this.SendPropertyChanged("Locale");
					this.OnLocaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int")]
		public System.Nullable<int> ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedOn
		{
			get
			{
				return this._LastUpdatedOn;
			}
			set
			{
				if ((this._LastUpdatedOn != value))
				{
					this.OnLastUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedOn = value;
					this.SendPropertyChanged("LastUpdatedOn");
					this.OnLastUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BraftonID", DbType="NVarChar(255)")]
		public string BraftonID
		{
			get
			{
				return this._BraftonID;
			}
			set
			{
				if ((this._BraftonID != value))
				{
					this.OnBraftonIDChanging(value);
					this.SendPropertyChanging();
					this._BraftonID = value;
					this.SendPropertyChanged("BraftonID");
					this.OnBraftonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Blog_Blog_Post", Storage="_Blog_Blog", ThisKey="BlogID", OtherKey="BlogID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Blog_Blog Blog_Blog
		{
			get
			{
				return this._Blog_Blog.Entity;
			}
			set
			{
				Blog_Blog previousValue = this._Blog_Blog.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Blog.Entity = null;
						previousValue.Blog_Posts.Remove(this);
					}
					this._Blog_Blog.Entity = value;
					if ((value != null))
					{
						value.Blog_Posts.Add(this);
						this._BlogID = value.BlogID;
					}
					else
					{
						this._BlogID = default(int);
					}
					this.SendPropertyChanged("Blog_Blog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_Blog_Post", Storage="_ContentItem", ThisKey="ContentItemId", OtherKey="ContentItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentItem ContentItem
		{
			get
			{
				return this._ContentItem.Entity;
			}
			set
			{
				ContentItem previousValue = this._ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentItem.Entity = null;
						previousValue.Blog_Post = null;
					}
					this._ContentItem.Entity = value;
					if ((value != null))
					{
						value.Blog_Post = this;
						this._ContentItemId = value.ContentItemID;
					}
					else
					{
						this._ContentItemId = default(int);
					}
					this.SendPropertyChanged("ContentItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Blogs")]
	public partial class Blog_Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogID;
		
		private int _ModuleID;
		
		private string _Title;
		
		private string _Description;
		
		private string _Image;
		
		private string _Locale;
		
		private System.Nullable<bool> _FullLocalization;
		
		private bool _Published;
		
		private bool _IncludeImagesInFeed;
		
		private bool _IncludeAuthorInFeed;
		
		private bool _Syndicated;
		
		private string _SyndicationEmail;
		
		private string _Copyright;
		
		private bool _MustApproveGhostPosts;
		
		private bool _PublishAsOwner;
		
		private System.Nullable<bool> _EnablePingBackSend;
		
		private System.Nullable<bool> _EnablePingBackReceive;
		
		private System.Nullable<bool> _AutoApprovePingBack;
		
		private System.Nullable<bool> _EnableTrackBackSend;
		
		private System.Nullable<bool> _EnableTrackBackReceive;
		
		private System.Nullable<bool> _AutoApproveTrackBack;
		
		private int _OwnerUserId;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<Blog_Post> _Blog_Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnLocaleChanging(string value);
    partial void OnLocaleChanged();
    partial void OnFullLocalizationChanging(System.Nullable<bool> value);
    partial void OnFullLocalizationChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnIncludeImagesInFeedChanging(bool value);
    partial void OnIncludeImagesInFeedChanged();
    partial void OnIncludeAuthorInFeedChanging(bool value);
    partial void OnIncludeAuthorInFeedChanged();
    partial void OnSyndicatedChanging(bool value);
    partial void OnSyndicatedChanged();
    partial void OnSyndicationEmailChanging(string value);
    partial void OnSyndicationEmailChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnMustApproveGhostPostsChanging(bool value);
    partial void OnMustApproveGhostPostsChanged();
    partial void OnPublishAsOwnerChanging(bool value);
    partial void OnPublishAsOwnerChanged();
    partial void OnEnablePingBackSendChanging(System.Nullable<bool> value);
    partial void OnEnablePingBackSendChanged();
    partial void OnEnablePingBackReceiveChanging(System.Nullable<bool> value);
    partial void OnEnablePingBackReceiveChanged();
    partial void OnAutoApprovePingBackChanging(System.Nullable<bool> value);
    partial void OnAutoApprovePingBackChanged();
    partial void OnEnableTrackBackSendChanging(System.Nullable<bool> value);
    partial void OnEnableTrackBackSendChanged();
    partial void OnEnableTrackBackReceiveChanging(System.Nullable<bool> value);
    partial void OnEnableTrackBackReceiveChanged();
    partial void OnAutoApproveTrackBackChanging(System.Nullable<bool> value);
    partial void OnAutoApproveTrackBackChanged();
    partial void OnOwnerUserIdChanging(int value);
    partial void OnOwnerUserIdChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Blog_Blog()
		{
			this._Blog_Posts = new EntitySet<Blog_Post>(new Action<Blog_Post>(this.attach_Blog_Posts), new Action<Blog_Post>(this.detach_Blog_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locale", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this.OnLocaleChanging(value);
					this.SendPropertyChanging();
					this._Locale = value;
					this.SendPropertyChanged("Locale");
					this.OnLocaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullLocalization", DbType="Bit")]
		public System.Nullable<bool> FullLocalization
		{
			get
			{
				return this._FullLocalization;
			}
			set
			{
				if ((this._FullLocalization != value))
				{
					this.OnFullLocalizationChanging(value);
					this.SendPropertyChanging();
					this._FullLocalization = value;
					this.SendPropertyChanged("FullLocalization");
					this.OnFullLocalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeImagesInFeed", DbType="Bit NOT NULL")]
		public bool IncludeImagesInFeed
		{
			get
			{
				return this._IncludeImagesInFeed;
			}
			set
			{
				if ((this._IncludeImagesInFeed != value))
				{
					this.OnIncludeImagesInFeedChanging(value);
					this.SendPropertyChanging();
					this._IncludeImagesInFeed = value;
					this.SendPropertyChanged("IncludeImagesInFeed");
					this.OnIncludeImagesInFeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeAuthorInFeed", DbType="Bit NOT NULL")]
		public bool IncludeAuthorInFeed
		{
			get
			{
				return this._IncludeAuthorInFeed;
			}
			set
			{
				if ((this._IncludeAuthorInFeed != value))
				{
					this.OnIncludeAuthorInFeedChanging(value);
					this.SendPropertyChanging();
					this._IncludeAuthorInFeed = value;
					this.SendPropertyChanged("IncludeAuthorInFeed");
					this.OnIncludeAuthorInFeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Syndicated", DbType="Bit NOT NULL")]
		public bool Syndicated
		{
			get
			{
				return this._Syndicated;
			}
			set
			{
				if ((this._Syndicated != value))
				{
					this.OnSyndicatedChanging(value);
					this.SendPropertyChanging();
					this._Syndicated = value;
					this.SendPropertyChanged("Syndicated");
					this.OnSyndicatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyndicationEmail", DbType="NVarChar(255)")]
		public string SyndicationEmail
		{
			get
			{
				return this._SyndicationEmail;
			}
			set
			{
				if ((this._SyndicationEmail != value))
				{
					this.OnSyndicationEmailChanging(value);
					this.SendPropertyChanging();
					this._SyndicationEmail = value;
					this.SendPropertyChanged("SyndicationEmail");
					this.OnSyndicationEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(2000)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustApproveGhostPosts", DbType="Bit NOT NULL")]
		public bool MustApproveGhostPosts
		{
			get
			{
				return this._MustApproveGhostPosts;
			}
			set
			{
				if ((this._MustApproveGhostPosts != value))
				{
					this.OnMustApproveGhostPostsChanging(value);
					this.SendPropertyChanging();
					this._MustApproveGhostPosts = value;
					this.SendPropertyChanged("MustApproveGhostPosts");
					this.OnMustApproveGhostPostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishAsOwner", DbType="Bit NOT NULL")]
		public bool PublishAsOwner
		{
			get
			{
				return this._PublishAsOwner;
			}
			set
			{
				if ((this._PublishAsOwner != value))
				{
					this.OnPublishAsOwnerChanging(value);
					this.SendPropertyChanging();
					this._PublishAsOwner = value;
					this.SendPropertyChanged("PublishAsOwner");
					this.OnPublishAsOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnablePingBackSend", DbType="Bit")]
		public System.Nullable<bool> EnablePingBackSend
		{
			get
			{
				return this._EnablePingBackSend;
			}
			set
			{
				if ((this._EnablePingBackSend != value))
				{
					this.OnEnablePingBackSendChanging(value);
					this.SendPropertyChanging();
					this._EnablePingBackSend = value;
					this.SendPropertyChanged("EnablePingBackSend");
					this.OnEnablePingBackSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnablePingBackReceive", DbType="Bit")]
		public System.Nullable<bool> EnablePingBackReceive
		{
			get
			{
				return this._EnablePingBackReceive;
			}
			set
			{
				if ((this._EnablePingBackReceive != value))
				{
					this.OnEnablePingBackReceiveChanging(value);
					this.SendPropertyChanging();
					this._EnablePingBackReceive = value;
					this.SendPropertyChanged("EnablePingBackReceive");
					this.OnEnablePingBackReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoApprovePingBack", DbType="Bit")]
		public System.Nullable<bool> AutoApprovePingBack
		{
			get
			{
				return this._AutoApprovePingBack;
			}
			set
			{
				if ((this._AutoApprovePingBack != value))
				{
					this.OnAutoApprovePingBackChanging(value);
					this.SendPropertyChanging();
					this._AutoApprovePingBack = value;
					this.SendPropertyChanged("AutoApprovePingBack");
					this.OnAutoApprovePingBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableTrackBackSend", DbType="Bit")]
		public System.Nullable<bool> EnableTrackBackSend
		{
			get
			{
				return this._EnableTrackBackSend;
			}
			set
			{
				if ((this._EnableTrackBackSend != value))
				{
					this.OnEnableTrackBackSendChanging(value);
					this.SendPropertyChanging();
					this._EnableTrackBackSend = value;
					this.SendPropertyChanged("EnableTrackBackSend");
					this.OnEnableTrackBackSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableTrackBackReceive", DbType="Bit")]
		public System.Nullable<bool> EnableTrackBackReceive
		{
			get
			{
				return this._EnableTrackBackReceive;
			}
			set
			{
				if ((this._EnableTrackBackReceive != value))
				{
					this.OnEnableTrackBackReceiveChanging(value);
					this.SendPropertyChanging();
					this._EnableTrackBackReceive = value;
					this.SendPropertyChanged("EnableTrackBackReceive");
					this.OnEnableTrackBackReceiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoApproveTrackBack", DbType="Bit")]
		public System.Nullable<bool> AutoApproveTrackBack
		{
			get
			{
				return this._AutoApproveTrackBack;
			}
			set
			{
				if ((this._AutoApproveTrackBack != value))
				{
					this.OnAutoApproveTrackBackChanging(value);
					this.SendPropertyChanging();
					this._AutoApproveTrackBack = value;
					this.SendPropertyChanged("AutoApproveTrackBack");
					this.OnAutoApproveTrackBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUserId", DbType="Int NOT NULL")]
		public int OwnerUserId
		{
			get
			{
				return this._OwnerUserId;
			}
			set
			{
				if ((this._OwnerUserId != value))
				{
					this.OnOwnerUserIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerUserId = value;
					this.SendPropertyChanged("OwnerUserId");
					this.OnOwnerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Blog_Blog_Blog_Post", Storage="_Blog_Posts", ThisKey="BlogID", OtherKey="BlogID")]
		public EntitySet<Blog_Post> Blog_Posts
		{
			get
			{
				return this._Blog_Posts;
			}
			set
			{
				this._Blog_Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blog_Posts(Blog_Post entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Blog = this;
		}
		
		private void detach_Blog_Posts(Blog_Post entity)
		{
			this.SendPropertyChanging();
			entity.Blog_Blog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentItems")]
	public partial class ContentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemID;
		
		private string _Content;
		
		private int _ContentTypeID;
		
		private int _TabID;
		
		private int _ModuleID;
		
		private string _ContentKey;
		
		private bool _Indexed;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _StateID;
		
		private EntityRef<Blog_Post> _Blog_Post;
		
		private EntitySet<ContentItems_Tag> _ContentItems_Tags;
		
		private EntityRef<ContentType> _ContentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnContentKeyChanging(string value);
    partial void OnContentKeyChanged();
    partial void OnIndexedChanging(bool value);
    partial void OnIndexedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    #endregion
		
		public ContentItem()
		{
			this._Blog_Post = default(EntityRef<Blog_Post>);
			this._ContentItems_Tags = new EntitySet<ContentItems_Tag>(new Action<ContentItems_Tag>(this.attach_ContentItems_Tags), new Action<ContentItems_Tag>(this.detach_ContentItems_Tags));
			this._ContentType = default(EntityRef<ContentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeID", DbType="Int NOT NULL")]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					if (this._ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentKey", DbType="NVarChar(250)")]
		public string ContentKey
		{
			get
			{
				return this._ContentKey;
			}
			set
			{
				if ((this._ContentKey != value))
				{
					this.OnContentKeyChanging(value);
					this.SendPropertyChanging();
					this._ContentKey = value;
					this.SendPropertyChanged("ContentKey");
					this.OnContentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indexed", DbType="Bit NOT NULL")]
		public bool Indexed
		{
			get
			{
				return this._Indexed;
			}
			set
			{
				if ((this._Indexed != value))
				{
					this.OnIndexedChanging(value);
					this.SendPropertyChanging();
					this._Indexed = value;
					this.SendPropertyChanged("Indexed");
					this.OnIndexedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_Blog_Post", Storage="_Blog_Post", ThisKey="ContentItemID", OtherKey="ContentItemId", IsUnique=true, IsForeignKey=false)]
		public Blog_Post Blog_Post
		{
			get
			{
				return this._Blog_Post.Entity;
			}
			set
			{
				Blog_Post previousValue = this._Blog_Post.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Post.Entity = null;
						previousValue.ContentItem = null;
					}
					this._Blog_Post.Entity = value;
					if ((value != null))
					{
						value.ContentItem = this;
					}
					this.SendPropertyChanged("Blog_Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_ContentItems_Tag", Storage="_ContentItems_Tags", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<ContentItems_Tag> ContentItems_Tags
		{
			get
			{
				return this._ContentItems_Tags;
			}
			set
			{
				this._ContentItems_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_ContentItem", Storage="_ContentType", ThisKey="ContentTypeID", OtherKey="ContentTypeID", IsForeignKey=true)]
		public ContentType ContentType
		{
			get
			{
				return this._ContentType.Entity;
			}
			set
			{
				ContentType previousValue = this._ContentType.Entity;
				if (((previousValue != value) 
							|| (this._ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentType.Entity = null;
						previousValue.ContentItems.Remove(this);
					}
					this._ContentType.Entity = value;
					if ((value != null))
					{
						value.ContentItems.Add(this);
						this._ContentTypeID = value.ContentTypeID;
					}
					else
					{
						this._ContentTypeID = default(int);
					}
					this.SendPropertyChanged("ContentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = this;
		}
		
		private void detach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.ContentItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_Terms")]
	public partial class Taxonomy_Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TermID;
		
		private int _VocabularyID;
		
		private System.Nullable<int> _ParentTermID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Weight;
		
		private int _TermLeft;
		
		private int _TermRight;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<Taxonomy_Term> _Taxonomy_Terms;
		
		private EntityRef<Blog_Term> _Blog_Term;
		
		private EntitySet<ContentItems_Tag> _ContentItems_Tags;
		
		private EntityRef<Taxonomy_Term> _Taxonomy_Term1;
		
		private EntityRef<Taxonomy_Vocabulary> _Taxonomy_Vocabulary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    partial void OnVocabularyIDChanging(int value);
    partial void OnVocabularyIDChanged();
    partial void OnParentTermIDChanging(System.Nullable<int> value);
    partial void OnParentTermIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnTermLeftChanging(int value);
    partial void OnTermLeftChanged();
    partial void OnTermRightChanging(int value);
    partial void OnTermRightChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Taxonomy_Term()
		{
			this._Taxonomy_Terms = new EntitySet<Taxonomy_Term>(new Action<Taxonomy_Term>(this.attach_Taxonomy_Terms), new Action<Taxonomy_Term>(this.detach_Taxonomy_Terms));
			this._Blog_Term = default(EntityRef<Blog_Term>);
			this._ContentItems_Tags = new EntitySet<ContentItems_Tag>(new Action<ContentItems_Tag>(this.attach_ContentItems_Tags), new Action<ContentItems_Tag>(this.detach_ContentItems_Tags));
			this._Taxonomy_Term1 = default(EntityRef<Taxonomy_Term>);
			this._Taxonomy_Vocabulary = default(EntityRef<Taxonomy_Vocabulary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyID", DbType="Int NOT NULL")]
		public int VocabularyID
		{
			get
			{
				return this._VocabularyID;
			}
			set
			{
				if ((this._VocabularyID != value))
				{
					if (this._Taxonomy_Vocabulary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVocabularyIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyID = value;
					this.SendPropertyChanged("VocabularyID");
					this.OnVocabularyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTermID", DbType="Int")]
		public System.Nullable<int> ParentTermID
		{
			get
			{
				return this._ParentTermID;
			}
			set
			{
				if ((this._ParentTermID != value))
				{
					if (this._Taxonomy_Term1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentTermIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTermID = value;
					this.SendPropertyChanged("ParentTermID");
					this.OnParentTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermLeft", DbType="Int NOT NULL")]
		public int TermLeft
		{
			get
			{
				return this._TermLeft;
			}
			set
			{
				if ((this._TermLeft != value))
				{
					this.OnTermLeftChanging(value);
					this.SendPropertyChanging();
					this._TermLeft = value;
					this.SendPropertyChanged("TermLeft");
					this.OnTermLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermRight", DbType="Int NOT NULL")]
		public int TermRight
		{
			get
			{
				return this._TermRight;
			}
			set
			{
				if ((this._TermRight != value))
				{
					this.OnTermRightChanging(value);
					this.SendPropertyChanging();
					this._TermRight = value;
					this.SendPropertyChanged("TermRight");
					this.OnTermRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_Taxonomy_Term", Storage="_Taxonomy_Terms", ThisKey="TermID", OtherKey="ParentTermID")]
		public EntitySet<Taxonomy_Term> Taxonomy_Terms
		{
			get
			{
				return this._Taxonomy_Terms;
			}
			set
			{
				this._Taxonomy_Terms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_Blog_Term", Storage="_Blog_Term", ThisKey="TermID", OtherKey="TermID", IsUnique=true, IsForeignKey=false)]
		public Blog_Term Blog_Term
		{
			get
			{
				return this._Blog_Term.Entity;
			}
			set
			{
				Blog_Term previousValue = this._Blog_Term.Entity;
				if (((previousValue != value) 
							|| (this._Blog_Term.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Blog_Term.Entity = null;
						previousValue.Taxonomy_Term = null;
					}
					this._Blog_Term.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Term = this;
					}
					this.SendPropertyChanged("Blog_Term");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_ContentItems_Tag", Storage="_ContentItems_Tags", ThisKey="TermID", OtherKey="TermID")]
		public EntitySet<ContentItems_Tag> ContentItems_Tags
		{
			get
			{
				return this._ContentItems_Tags;
			}
			set
			{
				this._ContentItems_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_Taxonomy_Term", Storage="_Taxonomy_Term1", ThisKey="ParentTermID", OtherKey="TermID", IsForeignKey=true)]
		public Taxonomy_Term Taxonomy_Term1
		{
			get
			{
				return this._Taxonomy_Term1.Entity;
			}
			set
			{
				Taxonomy_Term previousValue = this._Taxonomy_Term1.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Term1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Term1.Entity = null;
						previousValue.Taxonomy_Terms.Remove(this);
					}
					this._Taxonomy_Term1.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Terms.Add(this);
						this._ParentTermID = value.TermID;
					}
					else
					{
						this._ParentTermID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Taxonomy_Term1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Vocabulary_Taxonomy_Term", Storage="_Taxonomy_Vocabulary", ThisKey="VocabularyID", OtherKey="VocabularyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Taxonomy_Vocabulary Taxonomy_Vocabulary
		{
			get
			{
				return this._Taxonomy_Vocabulary.Entity;
			}
			set
			{
				Taxonomy_Vocabulary previousValue = this._Taxonomy_Vocabulary.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Vocabulary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Vocabulary.Entity = null;
						previousValue.Taxonomy_Terms.Remove(this);
					}
					this._Taxonomy_Vocabulary.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Terms.Add(this);
						this._VocabularyID = value.VocabularyID;
					}
					else
					{
						this._VocabularyID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_Vocabulary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term1 = this;
		}
		
		private void detach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term1 = null;
		}
		
		private void attach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term = this;
		}
		
		private void detach_ContentItems_Tags(ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Term = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog_Terms")]
	public partial class Blog_Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TermID;
		
		private int _ViewOrder;
		
		private EntityRef<Taxonomy_Term> _Taxonomy_Term;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    #endregion
		
		public Blog_Term()
		{
			this._Taxonomy_Term = default(EntityRef<Taxonomy_Term>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					if (this._Taxonomy_Term.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_Blog_Term", Storage="_Taxonomy_Term", ThisKey="TermID", OtherKey="TermID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Taxonomy_Term Taxonomy_Term
		{
			get
			{
				return this._Taxonomy_Term.Entity;
			}
			set
			{
				Taxonomy_Term previousValue = this._Taxonomy_Term.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Term.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Term.Entity = null;
						previousValue.Blog_Term = null;
					}
					this._Taxonomy_Term.Entity = value;
					if ((value != null))
					{
						value.Blog_Term = this;
						this._TermID = value.TermID;
					}
					else
					{
						this._TermID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_Term");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentItems_Tags")]
	public partial class ContentItems_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemTagID;
		
		private int _ContentItemID;
		
		private int _TermID;
		
		private EntityRef<ContentItem> _ContentItem;
		
		private EntityRef<Taxonomy_Term> _Taxonomy_Term;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemTagIDChanging(int value);
    partial void OnContentItemTagIDChanged();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    #endregion
		
		public ContentItems_Tag()
		{
			this._ContentItem = default(EntityRef<ContentItem>);
			this._Taxonomy_Term = default(EntityRef<Taxonomy_Term>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemTagID
		{
			get
			{
				return this._ContentItemTagID;
			}
			set
			{
				if ((this._ContentItemTagID != value))
				{
					this.OnContentItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemTagID = value;
					this.SendPropertyChanged("ContentItemTagID");
					this.OnContentItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int NOT NULL")]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int NOT NULL")]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					if (this._Taxonomy_Term.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentItem_ContentItems_Tag", Storage="_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentItem ContentItem
		{
			get
			{
				return this._ContentItem.Entity;
			}
			set
			{
				ContentItem previousValue = this._ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentItem.Entity = null;
						previousValue.ContentItems_Tags.Remove(this);
					}
					this._ContentItem.Entity = value;
					if ((value != null))
					{
						value.ContentItems_Tags.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(int);
					}
					this.SendPropertyChanged("ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Term_ContentItems_Tag", Storage="_Taxonomy_Term", ThisKey="TermID", OtherKey="TermID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Taxonomy_Term Taxonomy_Term
		{
			get
			{
				return this._Taxonomy_Term.Entity;
			}
			set
			{
				Taxonomy_Term previousValue = this._Taxonomy_Term.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_Term.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_Term.Entity = null;
						previousValue.ContentItems_Tags.Remove(this);
					}
					this._Taxonomy_Term.Entity = value;
					if ((value != null))
					{
						value.ContentItems_Tags.Add(this);
						this._TermID = value.TermID;
					}
					else
					{
						this._TermID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_Term");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_Vocabularies")]
	public partial class Taxonomy_Vocabulary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VocabularyID;
		
		private int _VocabularyTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Weight;
		
		private System.Nullable<int> _ScopeID;
		
		private int _ScopeTypeID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsSystem;
		
		private EntitySet<Taxonomy_Term> _Taxonomy_Terms;
		
		private EntityRef<Taxonomy_VocabularyType> _Taxonomy_VocabularyType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVocabularyIDChanging(int value);
    partial void OnVocabularyIDChanged();
    partial void OnVocabularyTypeIDChanging(int value);
    partial void OnVocabularyTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnScopeIDChanging(System.Nullable<int> value);
    partial void OnScopeIDChanged();
    partial void OnScopeTypeIDChanging(int value);
    partial void OnScopeTypeIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public Taxonomy_Vocabulary()
		{
			this._Taxonomy_Terms = new EntitySet<Taxonomy_Term>(new Action<Taxonomy_Term>(this.attach_Taxonomy_Terms), new Action<Taxonomy_Term>(this.detach_Taxonomy_Terms));
			this._Taxonomy_VocabularyType = default(EntityRef<Taxonomy_VocabularyType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VocabularyID
		{
			get
			{
				return this._VocabularyID;
			}
			set
			{
				if ((this._VocabularyID != value))
				{
					this.OnVocabularyIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyID = value;
					this.SendPropertyChanged("VocabularyID");
					this.OnVocabularyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyTypeID", DbType="Int NOT NULL")]
		public int VocabularyTypeID
		{
			get
			{
				return this._VocabularyTypeID;
			}
			set
			{
				if ((this._VocabularyTypeID != value))
				{
					if (this._Taxonomy_VocabularyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVocabularyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyTypeID = value;
					this.SendPropertyChanged("VocabularyTypeID");
					this.OnVocabularyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeID", DbType="Int")]
		public System.Nullable<int> ScopeID
		{
			get
			{
				return this._ScopeID;
			}
			set
			{
				if ((this._ScopeID != value))
				{
					this.OnScopeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeID = value;
					this.SendPropertyChanged("ScopeID");
					this.OnScopeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeTypeID", DbType="Int NOT NULL")]
		public int ScopeTypeID
		{
			get
			{
				return this._ScopeTypeID;
			}
			set
			{
				if ((this._ScopeTypeID != value))
				{
					this.OnScopeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeTypeID = value;
					this.SendPropertyChanged("ScopeTypeID");
					this.OnScopeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_Vocabulary_Taxonomy_Term", Storage="_Taxonomy_Terms", ThisKey="VocabularyID", OtherKey="VocabularyID")]
		public EntitySet<Taxonomy_Term> Taxonomy_Terms
		{
			get
			{
				return this._Taxonomy_Terms;
			}
			set
			{
				this._Taxonomy_Terms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_VocabularyType_Taxonomy_Vocabulary", Storage="_Taxonomy_VocabularyType", ThisKey="VocabularyTypeID", OtherKey="VocabularyTypeID", IsForeignKey=true)]
		public Taxonomy_VocabularyType Taxonomy_VocabularyType
		{
			get
			{
				return this._Taxonomy_VocabularyType.Entity;
			}
			set
			{
				Taxonomy_VocabularyType previousValue = this._Taxonomy_VocabularyType.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy_VocabularyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy_VocabularyType.Entity = null;
						previousValue.Taxonomy_Vocabularies.Remove(this);
					}
					this._Taxonomy_VocabularyType.Entity = value;
					if ((value != null))
					{
						value.Taxonomy_Vocabularies.Add(this);
						this._VocabularyTypeID = value.VocabularyTypeID;
					}
					else
					{
						this._VocabularyTypeID = default(int);
					}
					this.SendPropertyChanged("Taxonomy_VocabularyType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Vocabulary = this;
		}
		
		private void detach_Taxonomy_Terms(Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_Vocabulary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxonomy_VocabularyTypes")]
	public partial class Taxonomy_VocabularyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VocabularyTypeID;
		
		private string _VocabularyType;
		
		private EntitySet<Taxonomy_Vocabulary> _Taxonomy_Vocabularies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVocabularyTypeIDChanging(int value);
    partial void OnVocabularyTypeIDChanged();
    partial void OnVocabularyTypeChanging(string value);
    partial void OnVocabularyTypeChanged();
    #endregion
		
		public Taxonomy_VocabularyType()
		{
			this._Taxonomy_Vocabularies = new EntitySet<Taxonomy_Vocabulary>(new Action<Taxonomy_Vocabulary>(this.attach_Taxonomy_Vocabularies), new Action<Taxonomy_Vocabulary>(this.detach_Taxonomy_Vocabularies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VocabularyTypeID
		{
			get
			{
				return this._VocabularyTypeID;
			}
			set
			{
				if ((this._VocabularyTypeID != value))
				{
					this.OnVocabularyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyTypeID = value;
					this.SendPropertyChanged("VocabularyTypeID");
					this.OnVocabularyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VocabularyType
		{
			get
			{
				return this._VocabularyType;
			}
			set
			{
				if ((this._VocabularyType != value))
				{
					this.OnVocabularyTypeChanging(value);
					this.SendPropertyChanging();
					this._VocabularyType = value;
					this.SendPropertyChanged("VocabularyType");
					this.OnVocabularyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Taxonomy_VocabularyType_Taxonomy_Vocabulary", Storage="_Taxonomy_Vocabularies", ThisKey="VocabularyTypeID", OtherKey="VocabularyTypeID")]
		public EntitySet<Taxonomy_Vocabulary> Taxonomy_Vocabularies
		{
			get
			{
				return this._Taxonomy_Vocabularies;
			}
			set
			{
				this._Taxonomy_Vocabularies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taxonomy_Vocabularies(Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_VocabularyType = this;
		}
		
		private void detach_Taxonomy_Vocabularies(Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy_VocabularyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentTypes")]
	public partial class ContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentTypeID;
		
		private string _ContentType1;
		
		private EntitySet<ContentItem> _ContentItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnContentType1Changing(string value);
    partial void OnContentType1Changed();
    #endregion
		
		public ContentType()
		{
			this._ContentItems = new EntitySet<ContentItem>(new Action<ContentItem>(this.attach_ContentItems), new Action<ContentItem>(this.detach_ContentItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ContentType", Storage="_ContentType1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContentType1
		{
			get
			{
				return this._ContentType1;
			}
			set
			{
				if ((this._ContentType1 != value))
				{
					this.OnContentType1Changing(value);
					this.SendPropertyChanging();
					this._ContentType1 = value;
					this.SendPropertyChanged("ContentType1");
					this.OnContentType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_ContentItem", Storage="_ContentItems", ThisKey="ContentTypeID", OtherKey="ContentTypeID")]
		public EntitySet<ContentItem> ContentItems
		{
			get
			{
				return this._ContentItems;
			}
			set
			{
				this._ContentItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentItems(ContentItem entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = this;
		}
		
		private void detach_ContentItems(ContentItem entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<System.Guid> _PasswordResetToken;
		
		private System.Nullable<System.DateTime> _PasswordResetExpiration;
		
		private string _LowerEmail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnPasswordResetTokenChanging(System.Nullable<System.Guid> value);
    partial void OnPasswordResetTokenChanged();
    partial void OnPasswordResetExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordResetExpirationChanged();
    partial void OnLowerEmailChanging(string value);
    partial void OnLowerEmailChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetToken", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PasswordResetToken
		{
			get
			{
				return this._PasswordResetToken;
			}
			set
			{
				if ((this._PasswordResetToken != value))
				{
					this.OnPasswordResetTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetToken = value;
					this.SendPropertyChanged("PasswordResetToken");
					this.OnPasswordResetTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetExpiration", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordResetExpiration
		{
			get
			{
				return this._PasswordResetExpiration;
			}
			set
			{
				if ((this._PasswordResetExpiration != value))
				{
					this.OnPasswordResetExpirationChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetExpiration = value;
					this.SendPropertyChanged("PasswordResetExpiration");
					this.OnPasswordResetExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerEmail", AutoSync=AutoSync.Always, DbType="NVarChar(256)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string LowerEmail
		{
			get
			{
				return this._LowerEmail;
			}
			set
			{
				if ((this._LowerEmail != value))
				{
					this.OnLowerEmailChanging(value);
					this.SendPropertyChanging();
					this._LowerEmail = value;
					this.SendPropertyChanged("LowerEmail");
					this.OnLowerEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brafton")]
	public partial class Brafton_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Content;
		
		private string _Api;
		
		private string _BaseUrl;
		
		private System.Nullable<int> _BlogId;
		
		private System.Nullable<int> _PortalId;
		
		private System.Nullable<int> _TabId;
		
		private string _DomainName;
		
		private System.Nullable<int> _Limit;
		
		private int _IncUpdatedFeedContentValue;
		
		private System.Nullable<int> _Counter;
		
		private string _VideoPhotoURL;
		
		private string _VideoBaseUrl;
		
		private string _VideoPublicKey;
		
		private string _VideoSecretKey;
		
		private System.Nullable<int> _VideoFeedNumber;
		
		private System.Nullable<int> _AuthorId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnApiChanging(string value);
    partial void OnApiChanged();
    partial void OnBaseUrlChanging(string value);
    partial void OnBaseUrlChanged();
    partial void OnBlogIdChanging(System.Nullable<int> value);
    partial void OnBlogIdChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnTabIdChanging(System.Nullable<int> value);
    partial void OnTabIdChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnLimitChanging(System.Nullable<int> value);
    partial void OnLimitChanged();
    partial void OnIncUpdatedFeedContentValueChanging(int value);
    partial void OnIncUpdatedFeedContentValueChanged();
    partial void OnCounterChanging(System.Nullable<int> value);
    partial void OnCounterChanged();
    partial void OnVideoPhotoURLChanging(string value);
    partial void OnVideoPhotoURLChanged();
    partial void OnVideoBaseUrlChanging(string value);
    partial void OnVideoBaseUrlChanged();
    partial void OnVideoPublicKeyChanging(string value);
    partial void OnVideoPublicKeyChanged();
    partial void OnVideoSecretKeyChanging(string value);
    partial void OnVideoSecretKeyChanged();
    partial void OnVideoFeedNumberChanging(System.Nullable<int> value);
    partial void OnVideoFeedNumberChanged();
    partial void OnAuthorIdChanging(System.Nullable<int> value);
    partial void OnAuthorIdChanged();
    #endregion
		
		public Brafton_table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Api", DbType="NVarChar(MAX)")]
		public string Api
		{
			get
			{
				return this._Api;
			}
			set
			{
				if ((this._Api != value))
				{
					this.OnApiChanging(value);
					this.SendPropertyChanging();
					this._Api = value;
					this.SendPropertyChanged("Api");
					this.OnApiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUrl", DbType="NVarChar(MAX)")]
		public string BaseUrl
		{
			get
			{
				return this._BaseUrl;
			}
			set
			{
				if ((this._BaseUrl != value))
				{
					this.OnBaseUrlChanging(value);
					this.SendPropertyChanging();
					this._BaseUrl = value;
					this.SendPropertyChanged("BaseUrl");
					this.OnBaseUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogId", DbType="Int")]
		public System.Nullable<int> BlogId
		{
			get
			{
				return this._BlogId;
			}
			set
			{
				if ((this._BlogId != value))
				{
					this.OnBlogIdChanging(value);
					this.SendPropertyChanging();
					this._BlogId = value;
					this.SendPropertyChanged("BlogId");
					this.OnBlogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabId", DbType="Int")]
		public System.Nullable<int> TabId
		{
			get
			{
				return this._TabId;
			}
			set
			{
				if ((this._TabId != value))
				{
					this.OnTabIdChanging(value);
					this.SendPropertyChanging();
					this._TabId = value;
					this.SendPropertyChanged("TabId");
					this.OnTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="NVarChar(MAX)")]
		public string DomainName
		{
			get
			{
				return this._DomainName;
			}
			set
			{
				if ((this._DomainName != value))
				{
					this.OnDomainNameChanging(value);
					this.SendPropertyChanging();
					this._DomainName = value;
					this.SendPropertyChanged("DomainName");
					this.OnDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit", DbType="Int")]
		public System.Nullable<int> Limit
		{
			get
			{
				return this._Limit;
			}
			set
			{
				if ((this._Limit != value))
				{
					this.OnLimitChanging(value);
					this.SendPropertyChanging();
					this._Limit = value;
					this.SendPropertyChanged("Limit");
					this.OnLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncUpdatedFeedContentValue", DbType="Int NOT NULL")]
		public int IncUpdatedFeedContentValue
		{
			get
			{
				return this._IncUpdatedFeedContentValue;
			}
			set
			{
				if ((this._IncUpdatedFeedContentValue != value))
				{
					this.OnIncUpdatedFeedContentValueChanging(value);
					this.SendPropertyChanging();
					this._IncUpdatedFeedContentValue = value;
					this.SendPropertyChanged("IncUpdatedFeedContentValue");
					this.OnIncUpdatedFeedContentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="Int")]
		public System.Nullable<int> Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPhotoURL", DbType="NVarChar(MAX)")]
		public string VideoPhotoURL
		{
			get
			{
				return this._VideoPhotoURL;
			}
			set
			{
				if ((this._VideoPhotoURL != value))
				{
					this.OnVideoPhotoURLChanging(value);
					this.SendPropertyChanging();
					this._VideoPhotoURL = value;
					this.SendPropertyChanged("VideoPhotoURL");
					this.OnVideoPhotoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoBaseUrl", DbType="NVarChar(MAX)")]
		public string VideoBaseUrl
		{
			get
			{
				return this._VideoBaseUrl;
			}
			set
			{
				if ((this._VideoBaseUrl != value))
				{
					this.OnVideoBaseUrlChanging(value);
					this.SendPropertyChanging();
					this._VideoBaseUrl = value;
					this.SendPropertyChanged("VideoBaseUrl");
					this.OnVideoBaseUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPublicKey", DbType="NVarChar(MAX)")]
		public string VideoPublicKey
		{
			get
			{
				return this._VideoPublicKey;
			}
			set
			{
				if ((this._VideoPublicKey != value))
				{
					this.OnVideoPublicKeyChanging(value);
					this.SendPropertyChanging();
					this._VideoPublicKey = value;
					this.SendPropertyChanged("VideoPublicKey");
					this.OnVideoPublicKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoSecretKey", DbType="NVarChar(MAX)")]
		public string VideoSecretKey
		{
			get
			{
				return this._VideoSecretKey;
			}
			set
			{
				if ((this._VideoSecretKey != value))
				{
					this.OnVideoSecretKeyChanging(value);
					this.SendPropertyChanging();
					this._VideoSecretKey = value;
					this.SendPropertyChanged("VideoSecretKey");
					this.OnVideoSecretKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoFeedNumber", DbType="Int")]
		public System.Nullable<int> VideoFeedNumber
		{
			get
			{
				return this._VideoFeedNumber;
			}
			set
			{
				if ((this._VideoFeedNumber != value))
				{
					this.OnVideoFeedNumberChanging(value);
					this.SendPropertyChanging();
					this._VideoFeedNumber = value;
					this.SendPropertyChanged("VideoFeedNumber");
					this.OnVideoFeedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="Int")]
		public System.Nullable<int> AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
